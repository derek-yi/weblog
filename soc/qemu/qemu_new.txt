
make CROSS_COMPILE=arm-linux-gnueabihf- ARCH=arm vexpress_defconfig
make CROSS_COMPILE=arm-linux-gnueabihf- ARCH=arm 

make CROSS_COMPILE=arm-linux-gnueabihf- ARCH=arm defconfig
make CROSS_COMPILE=arm-linux-gnueabihf- ARCH=arm 

cp arch/arm/boot/zImage myImage
qemu-system-arm -M virt -m 512M -kernel myImage -nographic -append "console=ttyAMA0"

## defconfig
//qemu-system-arm -M virt -m 512M -kernel linux-5.8/myImage -sd a9rootfs.ext4 -serial stdio -append "root=/dev/mmcblk0 console=ttyAMA0" 
//qemu-system-arm -M virt -m 512M -kernel linux-5.8/myImage -sd a9rootfs.ext4 -serial stdio
//qemu-system-arm -M virt -m 512M -kernel linux-5.8/myImage -nographic -append "root=/dev/mmcblk0 console=ttyAMA0" -sd a9rootfs.ext4
//qemu-system-arm -M virt -m 512M -kernel linux-5.8/myImage -append "root=/dev/mmcblk0 console=ttyAMA0" -sd a9rootfs.ext4 -serial stdio
//qemu-system-arm -M virt -m 512M -kernel linux-5.8/myImage -serial stdio -append "root=/dev/mmcblk0 console=ttyAMA0" a9rootfs.ext3
//qemu-system-arm -M virt -m 512M -kernel linux-5.8/myImage -serial stdio -append "root=/dev/ram rdinit=/sbin/init" a9rootfs.ext4

qemu-system-arm -M virt  -m 512M -kernel linux-5.8/myImage -initrd a9rootfs.ext4 -append "root=/dev/ram rdinit=/sbin/init" -serial stdio
qemu-system-arm -M virt  -m 512M -kernel linux-5.8/myImage -initrd a9rootfs.ext4 -append "root=/dev/mtdblock0 init=/sbin/init" -serial stdio
qemu-system-arm -M virt  -kernel linux-5.8/myImage -initrd a9rootfs.ext4 -serial stdio -append "root=/dev/mmcblk0 rootfstype=ext4  init=/sbin/init"
qemu-system-arm -M virt  -m 512M -kernel linux-5.8/myImage -initrd a9rootfs.ext4 -serial stdio

qemu-system-arm -M virt  -m 512M -kernel linux-5.8/myImage -initrd ramdisk.image -serial stdio   //自动识别sd格式和initrd格式

//qemu-system-arm -M virt  -m 512M -kernel linux-5.8/myImage -serial stdio a9rootfs.ext4 
//qemu-system-arm -M virt  -m 512M -kernel linux-5.8/myImage -serial stdio ramdisk.image 

//qemu-system-arm -M virt  -kernel linux-5.8/myImage -serial stdio -append "root=/dev/mtdblock0 rootfstype=ext4  init=/sbin/init"  ubuntu.img
//qemu-system-arm -M virt -kernel linux-5.8/myImage -initrd ubuntu.img -serial stdio

//fuck, it works
qemu-system-arm -M vexpress-a9 -smp 4 -m 1024M -kernel arch/arm/boot/zImage -append "rdinit=/linuxrc console=ttyAMA0 loglevel=8" -dtb arch/arm/boot/dts/vexpress-v2p-ca9.dtb -nographic -initrd ../a9rootfs.ext4 
qemu-system-arm -M vexpress-a9 -m 1024M -kernel arch/arm/boot/zImage -append "rdinit=/linuxrc console=ttyAMA0" -dtb arch/arm/boot/dts/vexpress-v2p-ca9.dtb -nographic -initrd ../a9rootfs.ext4 

qemu-system-arm -M vexpress-a9 -m 1024M -kernel arch/arm/boot/zImage -append "rdinit=/linuxrc console=ttyAMA0" -dtb arch/arm/boot/dts/vexpress-v2p-ca9.dtb -nographic -initrd ../rootfs.ext4


//qemu-system-arm -M vexpress-a9 -m 1024M -kernel arch/arm/boot/zImage -append "rdinit=/linuxrc console=ttyAMA0" -nographic -initrd ../rootfs.ext4


## vexpress_defconfig
qemu-system-arm -M virt  -m 512M -kernel linux-5.8/myImage -serial stdio
//qemu-system-arm -M vexpress-a9  -m 512M -kernel linux-5.8/myImage -serial stdio
//qemu-system-arm -M vexpress-a9 -m 512M -kernel linux-5.8/myImage -nographic -append "console=ttyAMA0"

//qemu-system-arm -M virt  -m 512M -kernel linux-5.8/myImage -serial stdio -initrd a9rootfs.ext4 -append "root=/dev/ram rdinit=/sbin/init"
//qemu-system-arm -M virt  -m 512M -kernel linux-5.8/myImage -serial stdio -initrd ramdisk.image -append "root=/dev/mmcblk0 rdinit=/sbin/init"